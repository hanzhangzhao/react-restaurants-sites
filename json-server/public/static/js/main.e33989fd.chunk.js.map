{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/DishDetailComponent.js","components/HearderComponent.js","components/FooterComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","redux/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","onClick","to","id","width","CardImgOverlay","console","log","Menu","menu","dishes","map","key","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","JSON","stringify","this","postFeedback","resetFeedbackForm","href","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","Button","type","color","Component","RenderDish","RenderComment","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","dishDetail","CommentForm","state","isModalOpen","toggleModal","setState","rating","Modal","isOpen","toggle","ModalHeader","ModalBody","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","outline","Jumbotron","Form","FormGroup","Input","innerRef","input","Footer","RenderLeader","Media","tag","left","object","body","heading","About","leaders","CardHeader","title","list","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","addLeaders","leadersFailed","feedback","feedbacks","toISOString","fetch","credentials","headers","method","then","response","ok","error","Error","status","statusText","message","json","catch","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","addComment","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6WAEaA,EAAU,WACnB,OACI,yBAAKC,UAAU,UACX,0BAAMA,UAAU,oDAChB,2CCNCC,EAAU,yB,QCMvB,SAASC,EAAT,GAAiD,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,QAClC,OAAID,EAEI,kBAAC,EAAD,MAGCC,EAED,4BAAKA,GAKL,kBAAC,gBAAD,CAAeC,IAAE,EACbC,eAAgB,CACZC,cAAe,gCAEnB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASC,IAAKV,EAAUE,EAAKS,MAAOC,IAAKV,EAAKW,OAC9C,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAYb,EAAKW,MAChBX,EAAKc,YAAc,kBAACC,EAAA,EAAD,KAAef,EAAKc,aAA8B,KACtE,kBAACE,EAAA,EAAD,KAAWhB,EAAKiB,gBAyBzBC,MAlBf,SAAcC,GACV,OACI,yBAAKtB,UAAU,aACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,qBACX,kBAACE,EAAD,CAAYC,KAAMmB,EAAMC,KAAMnB,UAAWkB,EAAME,cAAenB,QAASiB,EAAMG,iBAEjF,yBAAKzB,UAAU,qBACX,kBAACE,EAAD,CAAYC,KAAMmB,EAAMI,UAAWtB,UAAWkB,EAAMK,cAAetB,QAASiB,EAAMM,iBAEtF,yBAAK5B,UAAU,qBACX,kBAACE,EAAD,CAAYC,KAAMmB,EAAMO,OAAQzB,UAAWkB,EAAMQ,eAAgBzB,QAASiB,EAAMS,qB,2BCrCpG,SAASC,EAAT,GAA4C,IAAlBT,EAAiB,EAAjBA,KAAiB,EAAXU,QAC5B,OAEI,kBAACxB,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMyB,GAAE,gBAAWX,EAAKY,KACpB,kBAACzB,EAAA,EAAD,CAAS0B,MAAM,OAAOzB,IAAKV,EAAUsB,EAAKX,MAAOC,IAAKU,EAAKT,OAC3D,kBAACuB,EAAA,EAAD,KACI,kBAACrB,EAAA,EAAD,KAAYO,EAAKT,SAQrCwB,QAAQC,IAAI,kCAEZ,IAmDeC,EAnDF,SAAClB,GACV,IAAMmB,EAAOnB,EAAMoB,OAAOA,OAAOC,IAAI,SAACpB,GAClC,OACI,yBAAKqB,IAAKrB,EAAKY,GAAInC,UAAU,uBACzB,kBAACgC,EAAD,CAAgBT,KAAMA,OAKlC,OAAID,EAAMoB,OAAOtC,UAET,yBAAKJ,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKPsB,EAAMoB,OAAOrC,QAEd,yBAAKL,UAAU,aACX,yBAAKA,UAAU,OACX,4BAAKsB,EAAMoB,OAAOrC,WAO1B,yBAAKL,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC6C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMZ,GAAG,SAAT,SAEJ,kBAACY,EAAA,EAAD,CAAgBC,QAAM,GAAtB,SAEJ,yBAAK/C,UAAU,UACX,oCACA,+BAGR,yBAAKA,UAAU,OACVyC,K,oDChEfO,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAUA,GAASA,EAAIC,QAAUE,IACtDC,EAAY,SAACD,GAAD,OAAS,SAACH,GAAD,OAAUA,GAASA,EAAIC,QAAUE,IACtDE,EAAW,SAACL,GAAD,OAAUM,MAAMC,OAAOP,KAClCQ,EAAa,SAACR,GAAD,MAAS,4CAA4CS,KAAKT,IAiL9DU,E,YA7KX,WAAYrC,GAAQ,IAAD,8BACf,4CAAMA,KAEDsC,aAAe,EAAKA,aAAaC,KAAlB,gBAHL,E,0EAQNC,GACTxB,QAAQC,IAAI,qBAAuBwB,KAAKC,UAAUF,IAClDG,KAAK3C,MAAM4C,aAAaJ,GACxBG,KAAK3C,MAAM6C,sB,+BAIL,IAAD,OAEL,OACI,yBAAKnE,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC6C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMZ,GAAG,SAAT,SAEJ,kBAACY,EAAA,EAAD,CAAgBC,QAAM,GAAtB,eAEJ,yBAAK/C,UAAU,UACX,0CACA,+BAIR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACX,qDAEJ,yBAAKA,UAAU,+BACX,2CACA,6DAC6B,6BAD7B,2BAE4B,6BAF5B,YAGa,6BACT,uBAAGA,UAAU,gBAJjB,mBAImD,6BAC/C,uBAAGA,UAAU,cALjB,mBAKiD,6BAC7C,uBAAGA,UAAU,mBANjB,KAMwC,uBAAGoE,KAAK,6BAAR,wBAG5C,yBAAKpE,UAAU,+BACX,oDAEJ,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,YAAYqE,KAAK,SAC5B,uBAAGA,KAAK,SAASrE,UAAU,kBAAkBoE,KAAK,oBAAmB,uBAAGpE,UAAU,gBAAlF,SACA,uBAAGqE,KAAK,SAASrE,UAAU,eAAeoE,KAAK,oBAAmB,uBAAGpE,UAAU,gBAA/E,UACA,uBAAGqE,KAAK,SAASrE,UAAU,kBAAkBoE,KAAK,6BAA4B,uBAAGpE,UAAU,qBAA3F,aAIZ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACX,sDAEJ,yBAAKA,UAAU,mBACX,kBAAC,OAAD,CAAMsE,MAAM,WAAWC,SAAU,SAACT,GAAD,OAAY,EAAKF,aAAaE,KAC3D,kBAACU,EAAA,EAAD,CAAKxE,UAAU,cACX,kBAACyE,EAAA,EAAD,CAAOC,QAAQ,aAAaC,GAAI,GAAhC,cACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IAAT,IACI,kBAAC,UAAQE,KAAT,CAAcP,MAAM,aAAanC,GAAG,YAAYrB,KAAK,YAAYgE,YAAY,aAAa9E,UAAU,eAChG+E,WAAY,CACR/B,WAAUK,UAAWA,EAAU,GAAIF,UAAWA,EAAU,OAEhE,kBAAC,SAAD,CACInD,UAAU,cACVsE,MAAM,aACNU,KAAK,UACLC,SAAU,CACNjC,SAAU,WACVK,UAAW,oCACXF,UAAW,qCAI3B,kBAACqB,EAAA,EAAD,CAAKxE,UAAU,cACX,kBAACyE,EAAA,EAAD,CAAOC,QAAQ,WAAWC,GAAI,GAA9B,aACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IAAT,IACI,kBAAC,UAAQE,KAAT,CAAcP,MAAM,YAAYnC,GAAG,WAAWrB,KAAK,WAAWgE,YAAY,YAAY9E,UAAU,eAC5F+E,WAAY,CACR/B,WAAUK,UAAWA,EAAU,GAAIF,UAAWA,EAAU,OAEhE,kBAAC,SAAD,CACInD,UAAU,cACVsE,MAAM,YACNU,KAAK,UACLC,SAAU,CACNjC,SAAU,WACVK,UAAW,oCACXF,UAAW,qCAI3B,kBAACqB,EAAA,EAAD,CAAKxE,UAAU,cACX,kBAACyE,EAAA,EAAD,CAAOC,QAAQ,SAASC,GAAI,GAA5B,gBACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IAAT,IACI,kBAAC,UAAQE,KAAT,CAAcP,MAAM,UAAUnC,GAAG,SAASrB,KAAK,SAASgE,YAAY,cAAc9E,UAAU,eACxF+E,WAAY,CACR/B,WAAUK,UAAWA,EAAU,GAAIF,UAAWA,EAAU,IAAKG,cAErE,kBAAC,SAAD,CACItD,UAAU,cACVsE,MAAM,UACNU,KAAK,UACLC,SAAU,CACNjC,SAAU,WACVK,UAAW,iCACXF,UAAW,6BACXG,SAAU,wBAI1B,kBAACkB,EAAA,EAAD,CAAKxE,UAAU,cACX,kBAACyE,EAAA,EAAD,CAAOC,QAAQ,QAAQC,GAAI,GAA3B,SACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IAAT,IACI,kBAAC,UAAQE,KAAT,CAAcP,MAAM,SAASnC,GAAG,QAAQrB,KAAK,QAAQgE,YAAY,QAAQ9E,UAAU,eAC/E+E,WAAY,CACR/B,WAAUS,gBAElB,kBAAC,SAAD,CACKzD,UAAU,cACVsE,MAAM,SACNU,KAAK,UACLC,SAAU,CACNjC,SAAU,WACVS,WAAY,6BAK7B,kBAACe,EAAA,EAAD,CAAKxE,UAAU,cACX,kBAAC4E,EAAA,EAAD,CAAKD,GAAI,CAACO,KAAK,EAAGC,OAAO,IACrB,yBAAKnF,UAAU,cACX,kBAACyE,EAAA,EAAD,CAAOW,OAAK,GACR,kBAAC,UAAQC,SAAT,CAAkBf,MAAM,SAASxD,KAAK,QAAQd,UAAU,qBAAsB,IAC9E,0DAIZ,kBAAC4E,EAAA,EAAD,CAAKD,GAAI,CAACO,KAAK,EAAGC,OAAO,IACrB,kBAAC,UAAQG,OAAT,CAAgBhB,MAAM,eAAexD,KAAK,cAAcd,UAAU,gBAC9D,wCACA,4CAIZ,kBAACwE,EAAA,EAAD,CAAKxE,UAAU,cACX,kBAACyE,EAAA,EAAD,CAAOC,QAAQ,UAAUC,GAAI,GAA7B,iBACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQY,SAAT,CAAkBjB,MAAM,WAAWnC,GAAG,UAAUrB,KAAK,UAAU0E,KAAK,KAAKxF,UAAU,mBAG3F,kBAACwE,EAAA,EAAD,CAAKxE,UAAU,cACX,kBAAC4E,EAAA,EAAD,CAAKD,GAAI,CAACO,KAAK,GAAIC,OAAO,IACtB,kBAACM,EAAA,EAAD,CAAQC,KAAK,SAASC,MAAM,WAA5B,2B,GAnKdC,a,2BCOtB,SAASC,EAAT,GAA+B,IAATtE,EAAQ,EAARA,KAClB,OAAY,MAARA,EAEI,yBAAKvB,UAAU,uBACX,kBAAC,gBAAD,CAAeM,IAAE,EACbC,eAAgB,CACZC,cAAe,gCAEnB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAS0B,MAAM,OAAOzB,IAAKV,EAAUsB,EAAKX,MAAOC,IAAKU,EAAKT,OAC3D,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAYO,EAAKT,MACjB,kBAACK,EAAA,EAAD,KAAWI,EAAKH,iBAShC,8BAKZ,SAAS0E,EAAT,GAA2D,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,OAI5C,GAFA3D,QAAQC,IAAI,wCAEI,MAAZwD,EACA,OACI,8BAKR,IAAMG,EAAUH,EAASpD,IAAI,SAACuD,GAC1B,OACI,kBAAC,OAAD,CAAM5F,IAAE,GACJ,wBAAIsC,IAAKsD,EAAQ/D,IACb,2BAAI+D,EAAQA,SACZ,iCAAOA,EAAQC,OAAf,QAA8B,IAAIC,KAAKC,eAAe,QAAS,CAC3DC,KAAM,UACNC,MAAO,OACPC,IAAK,YACNC,OAAO,IAAIC,KAAKA,KAAKC,MAAMT,EAAQU,aAOtD,OACI,yBAAK5G,UAAU,uBACX,yCACA,wBAAIA,UAAU,iBACV,kBAAC,UAAD,CAASM,IAAE,GACN4F,GAEL,kBAAC,EAAD,CAAaD,OAAQA,EAAQD,YAAaA,MAM1D,IAkDea,EAlDI,SAACvF,GAEhB,IAAMwF,EAAa,kBAACjB,EAAD,CAAYtE,KAAMD,EAAMC,OAE3C,OAAID,EAAMlB,UAEF,yBAAKJ,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKPsB,EAAMjB,QAEP,yBAAKL,UAAU,aACX,yBAAKA,UAAU,OACX,4BAAKsB,EAAMjB,WAKJ,MAAdiB,EAAMC,KAEP,yBAAKvB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC6C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMZ,GAAG,SAAT,SAEJ,kBAACY,EAAA,EAAD,CAAgBC,QAAM,GAAEzB,EAAMC,KAAKT,OAEvC,yBAAKd,UAAU,UACX,4BAAKsB,EAAMC,KAAKT,MAChB,+BAGR,yBAAKd,UAAU,OACV8G,EACD,kBAAChB,EAAD,CAAeC,SAAUzE,EAAMyE,SAC3BC,YAAa1E,EAAM0E,YACnBC,OAAQ3E,EAAMC,KAAKY,OAM3B,+BAKVa,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IAGvD2D,E,YAEF,WAAYzF,GAAQ,IAAD,8BACf,4CAAMA,KAED0F,MAAQ,CACTC,aAAa,GAGjB,EAAKC,YAAc,EAAKA,YAAYrD,KAAjB,gBAPJ,E,2EAYfI,KAAKkD,SAAS,CACVF,aAAchD,KAAK+C,MAAMC,gB,mCAIpBnD,GAETG,KAAKiD,cACLjD,KAAK3C,MAAM0E,YAAY/B,KAAK3C,MAAM2E,OAAQnC,EAAOsD,OAAQtD,EAAOqC,OAAQrC,EAAOoC,W,+BAGzE,IA3BK9C,EA2BN,OAEL,OAEI,oCACI,kBAACqC,EAAA,EAAD,CAAQzF,UAAU,qBAAqBiC,QAASgC,KAAKiD,aACjD,0BAAMlH,UAAU,iBAAuB,IAD3C,kBAIA,kBAACqH,EAAA,EAAD,CAAOC,OAAQrD,KAAK+C,MAAMC,YAAaM,OAAQtD,KAAKiD,aAChD,kBAACM,EAAA,EAAD,CAAaD,OAAQtD,KAAKiD,aAA1B,kBACA,kBAACO,EAAA,EAAD,KACI,kBAAC,YAAD,CAAWlD,SAAU,SAACT,GAAD,OAAY,EAAKF,aAAaE,KAC/C,kBAACU,EAAA,EAAD,CAAKxE,UAAU,cACX,kBAACyE,EAAA,EAAD,CAAOC,QAAQ,SAASC,GAAI,GAA5B,UACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQW,OAAT,CAAgBhB,MAAM,UAAUxD,KAAK,SAASd,UAAU,gBACpD,iDACA,qCACA,qCACA,qCACA,qCACA,wCAIZ,kBAACwE,EAAA,EAAD,CAAKxE,UAAU,cACX,kBAACyE,EAAA,EAAD,CAAOC,QAAQ,SAASC,GAAI,GAA5B,aACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQE,KAAT,CAAcP,MAAM,UAAUxD,KAAK,SAASd,UAAU,eAAemC,GAAG,SAAS2C,YAAY,YACzFC,WAAY,CAAE/B,WAAUK,WAzD7CD,EAyDkE,EAzD1D,SAACH,GAAD,OAAUA,GAASA,EAAIC,QAAUE,IAyD6BD,UAAWA,EAAU,OAC1E,kBAAC,SAAD,CAAQmB,MAAM,UAAUtE,UAAU,cAAcgF,KAAK,UACjDC,SAAU,CAAEjC,SAAU,WAAYK,UAAW,oCAAqCF,UAAW,qCAGzG,kBAACqB,EAAA,EAAD,CAAKxE,UAAU,cACX,kBAACyE,EAAA,EAAD,CAAOC,QAAQ,UAAUC,GAAI,GAA7B,WACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQY,SAAT,CAAkBjB,MAAM,WAAWxD,KAAK,UAAUd,UAAU,eAAemC,GAAG,UAAUqD,KAAK,QAGrG,kBAAChB,EAAA,EAAD,CAAKxE,UAAU,cACX,kBAAC4E,EAAA,EAAD,KACI,kBAACa,EAAA,EAAD,CAAQC,KAAK,SAASC,MAAM,WAA5B,oB,GApEVC,a,gGCzBX8B,G,YA7GX,WAAYpG,GAAQ,IAAD,8BACf,4CAAMA,KACD0F,MAAQ,CACTW,WAAW,EACXV,aAAa,GAEjB,EAAKW,UAAY,EAAKA,UAAU/D,KAAf,gBACjB,EAAKqD,YAAc,EAAKA,YAAYrD,KAAjB,gBACnB,EAAKgE,YAAc,EAAKA,YAAYhE,KAAjB,gBARJ,E,yEAYfI,KAAKkD,SAAS,CACVQ,WAAY1D,KAAK+C,MAAMW,c,oCAK3B1D,KAAKkD,SAAS,CACVF,aAAchD,KAAK+C,MAAMC,gB,kCAIrBa,GACR7D,KAAKiD,cACLa,MAAM,aAAe9D,KAAK+D,SAASC,MAAQ,aAAehE,KAAKiE,SAASD,MAAQ,aAAehE,KAAKkE,SAASC,SAC7GN,EAAMO,mB,+BAGA,IAAD,OACL,OAEI,oCACI,kBAACC,EAAA,EAAD,CAAQC,MAAI,EAACC,OAAO,MAChB,yBAAKxI,UAAU,aACX,kBAACyI,EAAA,EAAD,CAAexG,QAASgC,KAAK2D,YAC7B,kBAACc,EAAA,EAAD,CAAa1I,UAAU,UAAUoE,KAAK,KAClC,yBAAKzD,IAAI,yBAAyBgI,OAAO,KAAKvG,MAAM,KAAKvB,IAAI,2BAEjE,kBAAC+H,EAAA,EAAD,CAAUtB,OAAQrD,KAAK+C,MAAMW,UAAWkB,QAAM,GAC9C,kBAACC,GAAA,EAAD,CAAKD,QAAM,GACP,kBAACE,GAAA,EAAD,KACI,kBAAC,IAAD,CAAS/I,UAAU,WAAWkC,GAAG,SAC7B,0BAAMlC,UAAU,qBADpB,UAIJ,kBAAC+I,GAAA,EAAD,KACI,kBAAC,IAAD,CAAS/I,UAAU,WAAWkC,GAAG,YAC7B,0BAAMlC,UAAU,qBADpB,cAIJ,kBAAC+I,GAAA,EAAD,KACI,kBAAC,IAAD,CAAS/I,UAAU,WAAWkC,GAAG,SAC7B,0BAAMlC,UAAU,qBADpB,UAIJ,kBAAC+I,GAAA,EAAD,KACI,kBAAC,IAAD,CAAS/I,UAAU,WAAWkC,GAAG,cAC7B,0BAAMlC,UAAU,6BADpB,iBAKR,kBAAC8I,GAAA,EAAD,CAAK9I,UAAU,UAAU6I,QAAM,GAC3B,kBAACE,GAAA,EAAD,KACI,kBAACtD,EAAA,EAAD,CAAQuD,SAAO,EAAC/G,QAASgC,KAAKiD,aAC1B,0BAAMlH,UAAU,wBADpB,eAQhB,kBAACiJ,GAAA,EAAD,KACA,yBAAKjJ,UAAU,aACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,mBACX,qDACA,oKAKZ,kBAACqH,EAAA,EAAD,CAAOC,OAAQrD,KAAK+C,MAAMC,YAAaM,OAAQtD,KAAKiD,aAChD,kBAACM,EAAA,EAAD,CAAaD,OAAQtD,KAAKiD,aAA1B,SACA,kBAACO,EAAA,EAAD,KACI,kBAACyB,GAAA,EAAD,CAAM3E,SAAYN,KAAK4D,aACnB,kBAACsB,GAAA,EAAD,KACI,kBAAC1E,EAAA,EAAD,CAAOC,QAAQ,YAAf,YACA,kBAAC0E,GAAA,EAAD,CAAO1D,KAAK,OAAOvD,GAAG,WAAWrB,KAAK,WAAWuI,SAAU,SAACC,GAAD,OAAW,EAAKtB,SAAWsB,MAE1F,kBAACH,GAAA,EAAD,KACI,kBAAC1E,EAAA,EAAD,CAAOC,QAAQ,YAAf,YACA,kBAAC0E,GAAA,EAAD,CAAO1D,KAAK,OAAOvD,GAAG,WAAWrB,KAAK,WAAWuI,SAAU,SAACC,GAAD,OAAW,EAAKpB,SAAWoB,MAE1F,kBAACH,GAAA,EAAD,CAAW/D,OAAK,GACZ,kBAACX,EAAA,EAAD,CAAOW,OAAK,GACR,kBAACgE,GAAA,EAAD,CAAO1D,KAAK,WAAW5E,KAAK,WAAWuI,SAAU,SAACC,GAAD,OAAW,EAAKnB,SAAWmB,KADhF,gBAKJ,kBAAC7D,EAAA,EAAD,CAAQC,KAAK,SAASuC,MAAM,SAAStC,MAAM,WAA3C,iB,GAtGPC,aC8CN2D,OA/Cf,WACI,OACI,yBAAKvJ,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,2BACX,qCACA,wBAAIA,UAAU,iBACV,4BAAI,kBAAC,IAAD,CAAMkC,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,aACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,cAAT,iBAGZ,yBAAKlC,UAAU,kBACX,2CACA,6DAC6B,6BAD7B,2BAE4B,6BAF5B,YAGa,6BACT,uBAAGA,UAAU,sBAJjB,mBAIyD,6BACrD,uBAAGA,UAAU,oBALjB,mBAKuD,6BACnD,uBAAGA,UAAU,yBANjB,KAM8C,uBAAGoE,KAAK,6BAAR,wBAIlD,yBAAKpE,UAAU,qCACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,iCAAiCoE,KAAK,uBAAsB,uBAAGpE,UAAU,uBACtF,uBAAGA,UAAU,mCAAmCoE,KAAK,2CAA0C,uBAAGpE,UAAU,oBAC5G,uBAAGA,UAAU,mCAAmCoE,KAAK,+BAA8B,uBAAGpE,UAAU,oBAChG,uBAAGA,UAAU,kCAAkCoE,KAAK,uBAAsB,uBAAGpE,UAAU,mBACvF,uBAAGA,UAAU,iCAAiCoE,KAAK,uBAAsB,uBAAGpE,UAAU,mBACtF,uBAAGA,UAAU,sBAAsBoE,KAAK,WAAU,uBAAGpE,UAAU,yBAI3E,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,YACX,6E,oBCpCxB,SAASwJ,GAAalI,GAClB,OACI,kBAACmI,GAAA,EAAD,CAAOC,IAAI,MACP,kBAACD,GAAA,EAAD,CAAOE,MAAI,GACP,kBAACF,GAAA,EAAD,CAAOG,QAAM,EAACjJ,IAAKV,EAAUqB,EAAMO,OAAOjB,MAAOC,IAAKS,EAAMO,OAAOf,QAEvE,kBAAC2I,GAAA,EAAD,CAAOI,MAAI,EAAC7J,UAAU,oBAClB,kBAACyJ,GAAA,EAAD,CAAOK,SAAO,GAAExI,EAAMO,OAAOf,MAC7B,2BAAIQ,EAAMO,OAAOZ,aACjB,2BAAIK,EAAMO,OAAOT,eAiGlB2I,OA3Ff,SAAezI,GAiBX,IAAM0I,EAAU1I,EAAM0I,QAAQA,QAAQrH,IAAI,SAACd,GACvC,OACI,kBAAC,OAAD,CAAMvB,IAAE,GACJ,kBAACkJ,GAAD,CAAc3H,OAAQA,EAAQe,IAAKf,EAAOM,QAKtD,OACI,yBAAKnC,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC6C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMZ,GAAG,SAAT,SAChB,kBAACY,EAAA,EAAD,CAAgBC,QAAM,GAAtB,aAEJ,yBAAK/C,UAAU,UACX,wCACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,mBACX,2CACA,waACA,6EAAkD,8CAAlD,iIAEJ,yBAAKA,UAAU,mBACX,kBAACS,EAAA,EAAD,KACI,kBAACwJ,GAAA,EAAD,CAAYjK,UAAU,yBAAtB,qBACA,kBAACe,EAAA,EAAD,KACI,wBAAIf,UAAU,WACV,wBAAIA,UAAU,SAAd,WACA,wBAAIA,UAAU,SAAd,eACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,wBACA,wBAAIA,UAAU,SAAd,cACA,wBAAIA,UAAU,SAAd,aACA,wBAAIA,UAAU,SAAd,UAKhB,yBAAKA,UAAU,UACX,kBAACS,EAAA,EAAD,KACI,kBAACM,EAAA,EAAD,CAAUf,UAAU,YAChB,gCAAYA,UAAU,cAClB,uBAAGA,UAAU,QAAb,qFAEA,4BAAQA,UAAU,qBAAlB,cACA,0BAAMkK,MAAM,gBAAZ,0EAQpB,yBAAKlK,UAAU,mBACX,yBAAKA,UAAU,UACX,qDAEJ,yBAAKA,UAAU,UACX,kBAACyJ,GAAA,EAAD,CAAOU,MAAI,GACP,kBAAC,UAAD,CAAS7J,IAAE,GACN0J,Q,+OCpGtB,IAkEMxI,GAAgB,iBAAO,CAChCkE,KCpE0B,mBDuEjB0E,GAAe,SAACC,GAAD,MAAc,CACtC3E,KCvEyB,gBDwEzB4E,QAASD,IAGAE,GAAY,SAAC7H,GAAD,MAAa,CAClCgD,KC9EsB,aD+EtB4E,QAAS5H,IAyBA8H,GAAiB,SAACH,GAAD,MAAc,CACxC3E,KCrG2B,kBDsG3B4E,QAASD,IAGAI,GAAc,SAAC1E,GAAD,MAAe,CACtCL,KC3GwB,eD4GxB4E,QAASvE,IA0BApE,GAAgB,iBAAO,CAChC+D,KCpI0B,mBDuIjBgF,GAAe,SAACL,GAAD,MAAc,CACtC3E,KCvIyB,gBDwIzB4E,QAASD,IAGAM,GAAY,SAACC,GAAD,MAAa,CAClClF,KC9IsB,aD+ItB4E,QAASM,IA0BAC,GAAa,SAACb,GAAD,MAAc,CACpCtE,KCvKuB,cDwKvB4E,QAASN,IAGAlI,GAAiB,iBAAO,CACjC4D,KC3K2B,oBD8KlBoF,GAAgB,SAACzK,GAAD,MAAc,CACvCqF,KC9K0B,iBD+K1B4E,QAASjK,IAGA6D,GAAe,SAAC6G,GAAD,OAAc,WAEtC,IAAMC,E,wVAAS,IAAOD,GAGtB,OAFAC,EAAUpE,MAAO,IAAIF,MAAOuE,cAErBC,MAAMjL,EAAU,WAAY,CAC/B4J,KAAM9F,KAAKC,UAAUgH,GACrBG,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,OAAQ,SAEPC,KAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,GAGd,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMI,WAGjCP,KAAK,SAAAC,GAAQ,OAAIA,EAASO,SAC1BR,KAAK,SAAAP,GAAQ,OAAIhD,MAAM,gCAAkChE,KAAKC,UAAU+G,MACxEgB,MAAM,SAAAN,GAAWnJ,QAAQC,IAAI,iBAAkBkJ,EAAMI,SAClD9D,MAAM,6CAA+C0D,EAAMI,a,SE1LjEG,G,YAEJ,WAAY1K,GAAQ,IAAD,6BACjB,4CAAMA,IASNgB,QAAQC,IAAI,uCAVK,E,iFAcjBD,QAAQC,IAAI,gDACZ0B,KAAK3C,MAAM2K,cACXhI,KAAK3C,MAAM4K,gBACXjI,KAAK3C,MAAM6K,cACXlI,KAAK3C,MAAM8K,iB,+BAOH,IAAD,OAkCP,OACE,6BAME,kBAAC,GAAD,MAGA,kBAAC,mBAAD,KACE,kBAAC,iBAAD,CAAexJ,IAAKqB,KAAK3C,MAAM+K,SAASzJ,IAAK0J,WAAW,OAAOC,QAAS,KACtE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UA7Cb,WACf,OACE,kBAAC,EAAD,CAAMlL,KAAM,EAAKD,MAAMoB,OAAOA,OAAOgK,OAAO,SAACnL,GAAD,OAAUA,EAAKoL,WAAU,GACnEnL,cAAe,EAAKF,MAAMoB,OAAOtC,UACjCqB,cAAe,EAAKH,MAAMoB,OAAOrC,QACjCqB,UAAW,EAAKJ,MAAMsL,WAAWA,WAAWF,OAAO,SAACG,GAAD,OAAWA,EAAMF,WAAU,GAC9EhL,cAAe,EAAKL,MAAMsL,WAAWxM,UACrCwB,cAAe,EAAKN,MAAMsL,WAAWvM,QACrCwB,OAAQ,EAAKP,MAAM0I,QAAQA,QAAQ0C,OAAO,SAAC7K,GAAD,OAAYA,EAAO8K,WAAU,GACvE7K,eAAgB,EAAKR,MAAM0I,QAAQ5J,UACnC2B,eAAgB,EAAKT,MAAM0I,QAAQ3J,aAoC/B,kBAAC,IAAD,CAAOyM,OAAK,EAACN,KAAK,QAAQC,UAAW,kBAAM,kBAAC,EAAD,CAAM/J,OAAQ,EAAKpB,MAAMoB,YAFtE,OAGE,kBAAC,IAAD,CAAO8J,KAAK,gBAAgBC,UAjCnB,SAAC,GAAe,IAAbM,EAAY,EAAZA,MACpB,OACE,kBAAC,EAAD,CAAYxL,KAAM,EAAKD,MAAMoB,OAAOA,OAAOgK,OAAO,SAACnL,GAAD,OAAUA,EAAKY,KAAO6K,SAASD,EAAME,OAAOhH,OAAQ,MAAK,GACzG7F,UAAW,EAAKkB,MAAMoB,OAAOtC,UAC7BC,QAAS,EAAKiB,MAAMoB,OAAOrC,QAC3B0F,SAAU,EAAKzE,MAAMyE,SAASA,SAAS2G,OAAO,SAACxG,GAAD,OAAaA,EAAQD,SAAW+G,SAASD,EAAME,OAAOhH,OAAQ,MAC5GiH,gBAAiB,EAAK5L,MAAMyE,SAAS1F,QACrC2F,YAAa,EAAK1E,MAAM0E,iBA2BpB,kBAAC,IAAD,CAAO8G,OAAK,EAACN,KAAK,aAAaC,UAAW,kBAAM,kBAAC,EAAD,CAASvI,aAAc,EAAK5C,MAAM4C,aAAcC,kBAAmB,EAAK7C,MAAM6C,uBAC9H,kBAAC,IAAD,CAAO2I,OAAK,EAACN,KAAK,WAAWC,UAvBvB,WACd,OACE,kBAAC,GAAD,CAAOzC,QAAS,EAAK1I,MAAM0I,aAsBrB,kBAAC,IAAD,CAAU9H,GAAG,aAInB,kBAAC,GAAD,W,GAnFW0D,aAyFJuH,eAAWC,mBA5GF,SAAApG,GACtB,MAAO,CACLtE,OAAQsE,EAAMtE,OACdqD,SAAUiB,EAAMjB,SAChB6G,WAAY5F,EAAM4F,WAClB5C,QAAShD,EAAMgD,UAIQ,SAACqD,GAAD,MAAe,CACxCrH,YAAa,SAACC,EAAQmB,EAAQjB,EAAQD,GAAzB,OAAqCmH,EFhBzB,SAACpH,EAAQmB,EAAQjB,EAAQD,GAAzB,OAAqC,SAACmH,GAE7D,IAAMC,EAAa,CACfrH,OAAQA,EACRmB,OAAQA,EACRjB,OAAQA,EACRD,QAASA,GAIb,OAFAoH,EAAW1G,MAAO,IAAIF,MAAOuE,cAEtBC,MAAMjL,EAAU,WAAY,CAC/BoL,OAAQ,OACRxB,KAAM9F,KAAKC,UAAUsJ,GACrBlC,QAAS,CACL,eAAgB,oBAEpBD,YAAa,gBAEZG,KAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,GAGd,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMI,WAGjCP,KAAK,SAAAC,GAAQ,OAAIA,EAASO,SAC1BR,KAAK,SAAAC,GAAQ,OAAI8B,EAtCA,SAACnH,GAAD,MAAc,CACpCR,KCJuB,cDKvB4E,QAASpE,GAoCsBqH,CAAWhC,MACrCQ,MAAM,SAAAN,GAAWnJ,QAAQC,IAAI,iBAAkBkJ,EAAMI,SAClD9D,MAAM,4CAA8C0D,EAAMI,YEnBT7F,CAAYC,EAAQmB,EAAQjB,EAAQD,KAC/F+F,YAAa,WAAQoB,EFqBU,SAACA,GAG9B,OAFAA,EAAS7L,IAAc,IAEhB0J,MAAMjL,EAAU,UAClBqL,KAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,GAGd,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMI,WAGjCP,KAAK,SAAAC,GAAQ,OAAIA,EAASO,SAC1BR,KAAK,SAAA5I,GAAM,OAAI2K,EAAS9C,GAAU7H,MAClCqJ,MAAM,SAAAN,GAAK,OAAI4B,EAASjD,GAAaqB,EAAMI,eExClD1H,kBAAmB,WAAQkJ,EAASG,UAAQC,MAAM,cAClDvB,cAAe,WAAQmB,EFwDU,SAACA,GAEhC,OAAOnC,MAAMjL,EAAU,YAClBqL,KAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,GAGd,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMI,WAGjCP,KAAK,SAAAC,GAAQ,OAAIA,EAASO,SAC1BR,KAAK,SAAAvF,GAAQ,OAAIsH,EAAS5C,GAAY1E,MACtCgG,MAAM,SAAAN,GAAK,OAAI4B,EAAS7C,GAAeiB,EAAMI,eE1EpDM,YAAa,WAAQkB,EFuFU,SAACA,GAG9B,OAFAA,EAAS1L,IAAc,IAEhBuJ,MAAMjL,EAAU,cAClBqL,KAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,GAGd,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMI,WAGjCP,KAAK,SAAAC,GAAQ,OAAIA,EAASO,SAC1BR,KAAK,SAAAV,GAAM,OAAIyC,EAAS1C,GAAUC,MAClCmB,MAAM,SAAAN,GAAK,OAAI4B,EAAS3C,GAAae,EAAMI,eE1GlDO,aAAc,WAAQiB,EF2HU,SAACA,GAG/B,OAFAA,EAASvL,IAAe,IAEjBoJ,MAAMjL,EAAU,WAClBqL,KAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,GAGd,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMI,WAGjCP,KAAK,SAAAC,GAAQ,OAAIA,EAASO,SAC1BR,KAAK,SAAAtB,GAAO,OAAIqD,EAASxC,GAAWb,MACpC+B,MAAM,SAAAN,GAAK,OAAI4B,EAASvC,GAAcW,EAAMI,eE9InD3H,aAAc,SAAC6G,GAAcsC,EAASnJ,GAAa6G,OA4F3BqC,CAA6CpB,K,0kBCxHhE,IAAM0B,GAAS,WAIH,IAJI1G,EAIL,uDAJa,CACvB5G,WAAW,EACXC,QAAS,KACTqC,OAAQ,IACTiL,EAAW,uCACd,OAAQA,EAAOjI,MACX,IFPkB,aEQd,OAAO,MAAIsB,EAAX,CAAkB5G,WAAW,EAAOC,QAAS,KAAMqC,OAAQiL,EAAOrD,UAEtE,IFTsB,iBEUlB,OAAO,MAAItD,EAAX,CAAkB5G,WAAW,EAAMC,QAAS,KAAMqC,OAAQ,KAE9D,IFXqB,gBEYjB,OAAO,MAAIsE,EAAX,CAAkB5G,WAAW,EAAOC,QAASsN,EAAOrD,QAAS5H,OAAQ,KAEzE,QACI,OAAOsE,I,wjBCfZ,IAAM4G,GAAW,WAGL,IAHM5G,EAGP,uDAHe,CACzB3G,QAAS,KACT0F,SAAU,IACX4H,EAAW,uCACd,OAAQA,EAAOjI,MACX,IHJoB,eGKhB,OAAO,MAAIsB,EAAX,CAAkB5G,WAAW,EAAOC,QAAS,KAAM0F,SAAU4H,EAAOrD,UAExE,IHNuB,kBGOnB,OAAO,MAAItD,EAAX,CAAkB5G,WAAW,EAAOC,QAASsN,EAAOrD,QAASvE,SAAU,KAE3E,IHdmB,cGef,IAAIG,EAAUyH,EAAOrD,QAGrB,OAAO,MAAItD,EAAX,CAAkBjB,SAAUiB,EAAMjB,SAAS8H,OAAO3H,KACtD,QACI,OAAOc,I,wjBClBZ,IAAM8G,GAAa,WAIP,IAJQ9G,EAIT,uDAJiB,CAC3B5G,WAAW,EACXC,QAAS,KACTuM,WAAY,IACbe,EAAW,uCACd,OAAQA,EAAOjI,MACX,IJFkB,aIGd,OAAO,MAAIsB,EAAX,CAAkB5G,WAAW,EAAOC,QAAS,KAAMuM,WAAYe,EAAOrD,UAE1E,IJJsB,iBIKlB,OAAO,MAAItD,EAAX,CAAkB5G,WAAW,EAAMC,QAAS,KAAMuM,WAAY,KAElE,IJNqB,gBIOjB,OAAO,MAAI5F,EAAX,CAAkB5G,WAAW,EAAOC,QAASsN,EAAOrD,QAASsC,WAAY,KAE7E,QACI,OAAO5F,I,wjBChBZ,IAAM+G,GAAU,WAAqE,IAApE/G,EAAmE,uDAA3D,CAAC5G,WAAW,EAAMC,QAAS,KAAM2J,QAAS,IAAM2D,EAAW,uCACvF,OAAQA,EAAOjI,MACX,ILKmB,cKJf,OAAO,MAAIsB,EAAX,CAAkB5G,WAAW,EAAOC,QAAS,KAAM2J,QAAS2D,EAAOrD,UAEvE,ILGuB,kBKFnB,OAAO,MAAItD,EAAX,CAAkB5G,WAAW,EAAMC,QAAS,KAAM2J,QAAS,KAE/D,ILCsB,iBKAlB,OAAO,MAAIhD,EAAX,CAAkB5G,WAAW,EAAOC,QAASsN,EAAOrD,QAASN,QAAS,KAE1E,QACI,OAAOhD,I,+BCdNgH,GAAkB,CAC3BC,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,OAAO,EACPC,YAAa,OACbzC,QAAS,I,6NCIN,ICJD0C,GDKYC,uBACVC,2B,wVAAgB,EACZ/L,OAAQgL,GACR3H,SAAU6H,GACVhB,WAAYkB,GACZ9D,QAAS+D,IACNW,sBAAY,CACX3D,SAAUiD,OAGlBW,2BAAgBC,KAAOC,OCEhBC,G,iLAZX,OACE,kBAAC,YAAD,CAAUP,MAAOA,IACjB,kBAAC,IAAD,KACA,6BACE,kBAAC,GAAD,a,GAPU3I,aCGEmJ,QACW,cAA7BC,OAAO3C,SAAS4C,UAEe,UAA7BD,OAAO3C,SAAS4C,UAEhBD,OAAO3C,SAAS4C,SAASlC,MACvB,2DCTNmC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlE,KAAK,SAAAmE,GACjCA,EAAaC,iB","file":"static/js/main.e33989fd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\" />\r\n            <p>Loading...</p>\r\n        </div>\r\n    )\r\n}","export const baseUrl = \"http://localhost:3002/\";","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return(\r\n            <Loading />\r\n        )\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        )\r\n    }\r\n    else\r\n        return (\r\n            <FadeTransform in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        )\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promosLoading} errMess={props.promosErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImgOverlay, CardImg, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n// class Menu extends Component {\r\n\r\n//     render() {\r\nfunction RenderMenuItem({ dish, onClick }) {\r\n    return (\r\n        // <Card onClick={() => onClick(dish.id)}>\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n\r\n}\r\n\r\nconsole.log('Menu Component render invoked.')\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish={dish} />\r\n            </div>\r\n        )\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.dishes.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to=\"/home\">Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n}\r\n\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) =>!(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current State is: \" + JSON.stringify(values));\r\n        this.props.postFeedback(values);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to=\"/home\">Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n    \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"tel:+85287654321\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\".firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}> {/*same as <div class=\"col-md-10\"> */}\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" className=\"form-control\" \r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15),\r\n                                        }}/>\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less',\r\n                                        }}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}> {/*same as <div class=\"col-md-10\"> */}\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" className=\"form-control\" \r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15),\r\n                                        }}/>\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less',\r\n                                        }}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}> {/*same as <div class=\"col-md-10\"> */}\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" placeholder=\"Tel. Number\" className=\"form-control\" \r\n                                        validators={{\r\n                                            required, minLength: minLength(6), maxLength: maxLength(15), isNumber\r\n                                        }}/>\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 6 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}> {/*same as <div class=\"col-md-10\"> */}\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email\" className=\"form-control\" \r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}/>\r\n                                    <Errors\r\n                                         className=\"text-danger\"\r\n                                         model=\".email\"\r\n                                         show=\"touched\"\r\n                                         messages={{\r\n                                             required: 'Required',\r\n                                             validEmail: 'Invalid email address'\r\n                                         }}\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:6, offset:2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\" className=\"form-check-input\" />{' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size:3, offset:1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"12\" className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardTitle, CardText, CardBody, BreadcrumbItem, Breadcrumb, Button, Modal, ModalBody, ModalHeader, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n//  class DishDetail extends Component {\r\n\r\n//     componentDidMount() {\r\n//         console.log('Dishdetail Component componentDidMount is invoked.')\r\n//     }\r\n\r\n//     componentDidUpdate() {\r\n//         console.log('Dishdetail Component componentDidUpdate is invoked.')\r\n//     }\r\n\r\nfunction RenderDish({ dish }) {\r\n    if (dish != null) {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <FadeTransform in\r\n                    transformProps={{\r\n                        exitTransform: 'scale(0.5) translateY(-50%)'\r\n                    }}>\r\n                    <Card>\r\n                        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderComment({ comments, postComment, dishId }) {\r\n\r\n    console.log('DishDetail Component render invoked.')\r\n\r\n    if (comments == null) {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n\r\n\r\n    const comment = comments.map((comment) => {\r\n        return (\r\n            <Fade in>\r\n                <li key={comment.id}>\r\n                    <p>{comment.comment}</p>\r\n                    <p>-- {comment.author},&nbsp;{new Intl.DateTimeFormat('en-US', {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: '2-digit'\r\n                    }).format(new Date(Date.parse(comment.date)))}</p>\r\n                </li>\r\n            </Fade>\r\n        );\r\n    })\r\n\r\n\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <h4>comments </h4>\r\n            <ul className=\"list-unstyled\">\r\n                <Stagger in>\r\n                    {comment}\r\n                </Stagger>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n\r\n    const dishDetail = <RenderDish dish={props.dish} />\r\n\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if (props.dish != null) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to=\"/menu\">Menu</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {dishDetail}\r\n                    <RenderComment comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return (<div></div>);\r\n}\r\n\r\nexport default DishDetail;\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false,\r\n        }\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen,\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        // alert(\"Current state is \" + JSON.stringify(values));\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <>\r\n                <Button className=\"bg-white text-dark\" onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil\"></span>{' '}Submit Comment\r\n                </Button>\r\n\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={4}>Rating</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                                        <option>Please Select</option>\r\n                                        <option>5</option>\r\n                                        <option>4</option>\r\n                                        <option>3</option>\r\n                                        <option>2</option>\r\n                                        <option>1</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={4}>Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".author\" name=\"author\" className=\"form-control\" id=\"author\" placeholder=\"Your Name\"\r\n                                        validators={{ required, minLength: minLength(2), maxLength: maxLength(15), }}></Control.text>\r\n                                    <Errors model=\".author\" className=\"text-danger\" show=\"touched\"\r\n                                        messages={{ required: \"Required\", minLength: \"Must be greater than 1 characters\", maxLength: 'Must be 15 characters or less', }} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={4}>Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" name=\"comment\" className=\"form-control\" id=\"comment\" rows=\"6\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalBody, ModalHeader, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen,\r\n        })\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen,\r\n        })\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \"Password: \" + this.password.value + \"Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            // short for React.Fragment, similar as <div></div>\r\n            <>  \r\n                <Navbar dark expand=\"md\"> \r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                        <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/home\">\r\n                                    <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                    <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                    <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                    <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                <Button outline onClick={this.toggleModal}>\r\n                                    <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                </Button>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className=\"row row-header\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                            <h1>Ristorante Con Fusion</h1>\r\n                            <p>We take inspiration from the world's best cuisiones, and create a unique fusion experience. Our lipsmacking creations will tickle</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit = {this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\" innerRef={(input) => this.username = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"text\" id=\"password\" name=\"password\" innerRef={(input) => this.password = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember = input}/>\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to=\"/home\">Home</Link></li>\r\n                            <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                            <li><Link to=\"/menu\">Menu</Link></li>\r\n                            <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                                confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Stagger, Fade } from 'react-animation-components';\r\n\r\nfunction RenderLeader(props) {\r\n    return (\r\n        <Media tag=\"li\">\r\n            <Media left>\r\n                <Media object src={baseUrl + props.leader.image} alt={props.leader.name} />\r\n            </Media>\r\n            <Media body className=\"col-12 mb-5 ml-3\">\r\n                <Media heading>{props.leader.name}</Media>\r\n                <p>{props.leader.designation}</p>\r\n                <p>{props.leader.description}</p>\r\n            </Media>\r\n        </Media>\r\n    )\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    // const leaders = props.leaders.map((leader) => {\r\n    //     return (\r\n    //         <Media>\r\n    //             <Media left>\r\n    //                 <Media object src={leader.image} alt={leader.name} />\r\n    //             </Media>\r\n    //             <Media body className=\"ml-5 mb-5\">\r\n    //                 <Media heading>{leader.name}</Media>\r\n    //                 <p>{leader.designation}</p>\r\n    //                 <p>{leader.description}</p>\r\n    //             </Media>\r\n    //         </Media>\r\n    //     );\r\n    // });\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <Fade in>\r\n                <RenderLeader leader={leader} key={leader.id} />\r\n            </Fade>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        <Stagger in>\r\n                            {leaders}\r\n                        </Stagger>\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + \": \" + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => { // where you don't hear back anything from the server\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => { console.log('Post comments ', error.message);\r\n            alert('Your comment could not be posted\\nError: ' + error.message)})\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + \": \" + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => { // where you don't hear back anything from the server\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)))\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n})\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n})\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + \": \" + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => { // where you don't hear back anything from the server\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)))\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n})\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + \": \" + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => { // where you don't hear back anything from the server\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)))\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n})\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n})\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + \": \" + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => { // where you don't hear back anything from the server\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)))\r\n}\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n})\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING,\r\n})\r\n\r\nexport const leadersFailed = (errMess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errMess\r\n})\r\n\r\nexport const postFeedback = (feedback) => () => {\r\n\r\n    const feedbacks = {...feedback}\r\n    feedbacks.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        body: JSON.stringify(feedbacks),\r\n        credentials: 'same-origin',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + \": \" + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => { // where you don't hear back anything from the server\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(feedback => alert('Your feedback is submitted \\n' + JSON.stringify(feedback)))\r\n        .catch(error => { console.log('Post feedback ', error.message);\r\n            alert('Your feedback could not be posted\\nError: ' + error.message)})\r\n}","export const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const ADD_DISHES = \"ADD_DISHES\";\r\nexport const DISHES_LOADING = \"DISHES_LOADING\";\r\nexport const DISHES_FAILED = \"DISHES_FAILED\";\r\nexport const ADD_COMMENTS = \"ADD_COMMENTS\";\r\nexport const COMMENTS_FAILED = \"COMMENTS_FAILED\";\r\nexport const ADD_PROMOS = \"ADD_PROMOS\";\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const PROMOS_FAILED = \"PROMOS_FAILED\";\r\nexport const ADD_LEADERS = \"ADD_LEADERS\";\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = \"LEADERS_FAILED\";","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishDetailComponent';\r\nimport Header from './HearderComponent';\r\nimport Footer from './FooterComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes()) },\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n  fetchComments: () => { dispatch(fetchComments()) },\r\n  fetchPromos: () => { dispatch(fetchPromos()) },\r\n  fetchLeaders: () => { dispatch(fetchLeaders())},\r\n  postFeedback: (feedback) => {dispatch(postFeedback(feedback))}\r\n})\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // this.state = {\r\n    //   dishes: DISHES,\r\n    //   comments: COMMENTS,\r\n    //   leaders: LEADERS,\r\n    //   promotions: PROMOTIONS,\r\n    //   // selectedDish: null\r\n    // };\r\n    console.log('Menu Component constructor invoked.')\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Menu Component componentDidMount is invoked.')\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  // onDishSelect(dishId) {\r\n  //   this.setState({ selectedDish: dishId });\r\n  // }\r\n\r\n  render() {\r\n\r\n    const HomePage = () => {\r\n      return (\r\n        <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishesErrMess={this.props.dishes.errMess}\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promosLoading={this.props.promotions.isLoading}\r\n          promosErrMess={this.props.promotions.errMess}\r\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]} \r\n          leadersLoading={this.props.leaders.isLoading}\r\n          leadersErrMess={this.props.leaders.errMess} />\r\n      )\r\n    }\r\n\r\n    const DishWithId = ({ match }) => {\r\n      return (\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n        />\r\n      )\r\n    }\r\n\r\n    const AboutUs = () => {\r\n      return (\r\n        <About leaders={this.props.leaders } />\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {/* <Navbar dark color=\"primary\">\r\n        <div className=\"container\">\r\n          <NavbarBrand href=\"/\">Ristorante Con Fusion</NavbarBrand>\r\n        </div>\r\n      </Navbar> */}\r\n        <Header />\r\n        {/* <Menu dishes={this.state.dishes} onClick={(dishId) => this.onDishSelect(dishId)}/>\r\n      <DishDetail dish={this.state.dishes.filter((dish) => dish.id === this.state.selectedDish)[0]} /> */}\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch>\r\n              <Route path=\"/home\" component={HomePage} />\r\n              <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />    {/* pass in a props to the menu component */}\r\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n              <Route exact path=\"/contactus\" component={() => <Contact postFeedback={this.props.postFeedback} resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n              <Route exact path=\"/aboutus\" component={AboutUs} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes: [],\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n        \r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []};\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Comments = (state = {\r\n        errMess: null,\r\n        comments: [],\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            // comment.id = state.comments.length;\r\n            // comment.date = new Date().toISOString();\r\n            return {...state, comments: state.comments.concat(comment)};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        promotions: []\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n        \r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []};\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, promotions: []};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {isLoading: true, errMess: null, leaders: [],}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []};\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, leaders: []}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Provider store={store}>\n      <BrowserRouter>\n      <div>\n        <Main />\n      </div>\n      </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}